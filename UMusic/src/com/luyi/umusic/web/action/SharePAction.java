/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.luyi.umusic.web.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.luyi.umusic.model.PhotoSet;
import com.luyi.umusic.service.impl.UMusicManagerImpl;
import com.luyi.umusic.web.SharePForm;;

/** 
 * MyEclipse Struts
 * Creation date: 12-09-2013
 * 
 * XDoclet definition:
 * @struts.action path="/shareM" name="shareMForm" input="/form/shareM.jsp" scope="request" validate="true"
 * @struts.action-forward name="fail" path="/share.jsp"
 * @struts.action-forward name="MusicLib" path="/musiclib.jsp"
 */
public class SharePAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	UMusicManagerImpl uMusicManagerImpl;
	
	public UMusicManagerImpl getUMusicManagerImpl()
	{
		return uMusicManagerImpl;
	}
	
	public void setUMusicManagerImpl(UMusicManagerImpl uMusicManagerImpl)
	{
		this.uMusicManagerImpl = uMusicManagerImpl;
	}
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward save(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		SharePForm sharePForm = (SharePForm) form;// TODO Auto-generated method stub
		int id = Integer.parseInt(request.getSession().getAttribute("userId").toString());
		
		PhotoSet p = new PhotoSet();
		p.setPhotoName(sharePForm.getPhotoTitle());
		p.setPhotoInfo(sharePForm.getPhotoInfo());
		p.setUserId(id);
		p.setPhotoPath(request.getRealPath("/") + "UserData/UserPhoto/"
						+ sharePForm.getPhotoTitle());
		
		if(uMusicManagerImpl.shareP(p))
		{
			return list(mapping, form, request, response);
		}
		else
		{
			return mapping.findForward("umusic.share.photo");
		}
	}
	
	public ActionForward delete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		int id = Integer.parseInt(request.getParameter("photoId"));
		uMusicManagerImpl.deleteP(id);
		return list(mapping, form, request, response);
	}
	
	public ActionForward list(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		if(request.getSession().getAttribute("userId") != null)
		{
			int id = Integer.parseInt(request.getSession().getAttribute("userId").toString());
			List photolist = uMusicManagerImpl.findUserPhoto(id);
			request.getSession().setAttribute("photolist", photolist);
		}
		return mapping.findForward("umusic.share.photo");
	}
}