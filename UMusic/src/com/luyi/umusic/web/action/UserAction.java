/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.luyi.umusic.web.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import com.luyi.umusic.web.UserForm;

import com.luyi.umusic.model.UserInfo;
import com.luyi.umusic.service.impl.UMusicManagerImpl;

/** 
 * MyEclipse Struts
 * Creation date: 12-06-2013
 * 
 * XDoclet definition:
 * @struts.action path="/login" name="loginForm" input="/login.jsp" scope="request" validate="true"
 * @struts.action-forward name="home" path="/home.jsp"
 * @struts.action-forward name="regist" path="/reg.jsp"
 */
public class UserAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	UMusicManagerImpl uMusicManagerImpl;
	
	public UMusicManagerImpl getUMusicManagerImpl()
	{
		return uMusicManagerImpl;
	}
	
	public void setUMusicManagerImpl(UMusicManagerImpl uMusicManagerImpl)
	{
		this.uMusicManagerImpl = uMusicManagerImpl;
	}
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward login(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UserForm loginForm = (UserForm) form;// TODO Auto-generated method stub
		
		UserInfo u = new UserInfo(loginForm.getUsername(), loginForm.getPassword());
		
		if(uMusicManagerImpl.login(u))
		{
			List userlist = uMusicManagerImpl.findTheUser(u);
			Iterator itr = userlist.iterator();
			UserInfo uu = (UserInfo)itr.next();
			request.getSession().setAttribute("userlist", userlist);
			
			request.getSession().setAttribute("userName", loginForm.getUsername());
			request.getSession().setAttribute("userPwd", loginForm.getPassword());
			request.getSession().setAttribute("userId", uu.getId().toString());
			
			return mapping.findForward("umusic.home");
		}
		else
		{
			loginForm.setPassword("");
			return mapping.findForward("umusic.login");
		}
	}
	
	public ActionForward regist(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UserForm regForm = (UserForm) form;// TODO Auto-generated method stub
		
		UserInfo u = new UserInfo();
		u.setUserName(regForm.getUsername());
		u.setUserPwd(regForm.getPassword());
		u.setSex(regForm.getSex());
		u.setProvince(regForm.getProvince());
		u.setCity(regForm.getCity());
		u.setQq(regForm.getQq());
		u.setEmail(regForm.getEmail());
		u.setAddress(regForm.getAddress());
		u.setPhoto(regForm.getPhoto());
		
		if(uMusicManagerImpl.regist(u))
		{
			return mapping.findForward("umusic.login");
		}
		else
		{
			return mapping.findForward("umusic.reg");
		}
	}
	
	public ActionForward cancel(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		request.getSession().setAttribute("userlist", null);
		
		request.getSession().setAttribute("userName", null);
		request.getSession().setAttribute("userPwd", null);
		request.getSession().setAttribute("userId", null);
		return mapping.findForward("umusic.login");
	}
	
	public ActionForward list(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		List userlist = uMusicManagerImpl.findAllUser();
		request.getSession().setAttribute("userlist", userlist);
		
		return mapping.findForward("umusic.readmusic");
	}
	
	public ActionForward edit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UserForm regForm = (UserForm) form;// TODO Auto-generated method stub
		try {
			PrintWriter out = response.getWriter();
			UserInfo u = new UserInfo();
			u.setId(Integer.parseInt(request.getSession().getAttribute("userId").toString()));
			u.setUserName(request.getSession().getAttribute("userName").toString());
			u.setUserPwd(request.getSession().getAttribute("userPwd").toString());
			u.setSex(regForm.getSex());
			u.setProvince(regForm.getProvince());
			u.setCity(regForm.getCity());
			u.setQq(regForm.getQq());
			u.setEmail(regForm.getEmail());
			u.setAddress(regForm.getAddress());
			u.setPhoto(regForm.getPhoto());
			
			uMusicManagerImpl.update(u);
			out.println("<script>alert(\"ÐÞ¸Ä³É¹¦£¡\");</script>");
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		return mapping.findForward("umusic.useredit");
	}
	
	public ActionForward unspecified(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		return mapping.findForward("umusic.home");
	}
}